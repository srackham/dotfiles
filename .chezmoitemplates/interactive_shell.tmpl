#
# Shared environment variables.
#

# Shared bash and zsh history.
export HISTFILE=~/.shared_history
export HISTSIZE=10000

{{if .chezmoi.hostname | hasPrefix "nuc"}}
# Fix Remmina invisible cursor over SSH issue.
export PROMPT=$'%{\e]12;green\a%}\n%B%F{green}%n@%m %F{yellow}%~%f%b\n$ '
{{end}}

export FZF_DEFAULT_OPTS="--multi --bind ctrl-a:select-all,ctrl-d:deselect-all,ctrl-space:toggle+down --preview 'bat --color=always --style=plain {}' --bind ctrl-t:toggle-preview --preview-window wrap:hidden"
export FZF_DEFAULT_COMMAND="fd --type f"
export FZF_COMPLETION_TRIGGER=".."

# Default apps.
export EDITOR=vi


#
# Shared aliases
#

{{/*
Shared bash and zsh configuration settings for interactive shells.
*/}}
# Shared bash and zsh aliases
alias ,="cd -"
alias b="brave"

{{/* 23-Mar-2024: Ubuntu renamed `bat` to `batcat`*/}}
{{ if eq .chezmoi.osRelease.id "ubuntu" }}
alias cat="batcat --style=plain" 
alias less="batcat --style=plain"
alias l="batcat --style=plain"
{{ else }}
alias cat="bat --style=plain" 
alias less="bat --style=plain"
alias l="bat --style=plain"
{{ end }}

alias clipboard="xclip -selection clipboard"    # Copy stdout to clipboard
alias dmesg="sudo dmesg --human --color=always"
alias diff="diff --color=always -u"
alias drake="deno run -A Drakefile.ts"
alias rg="rg --colors path:style:bold  --colors path:fg:yellow"
alias g="rg --max-depth 1 -z"
alias gd="git diff --color"
alias gg="git grep -P"
alias gl="git log --oneline | fzf --preview 'git show --name-only {1}'"
alias gl="git log --pretty=format:'%h%x09%ad%x09%Cgreen%d%Creset %s' --date=relative"
alias gls="git ls-files"
alias grep="grep --color=auto"
alias gst="git status --short 2>/dev/null"
alias gw="./gradlew --console plain"
alias h=history

# lsflags="--color --group-directories-first"
# alias ls="ls ${lsflags}"
# alias la="ls ${lsflags} -lA"
# alias ll="ls ${lsflags} -l"
# alias lr="ls ${lsflags} -Altr --time-style='+%d-%m-%Y %H:%M:%S'" # Long listing in reverse chronological order

{{/* 23-Mar-2024: Ubuntu uses the older exa */}}
{{ if or (eq .chezmoi.osRelease.id "ubuntu")  (eq .chezmoi.osRelease.id "debian") }}
alias ls="exa"
alias ll="exa -lH"
alias lr="exa -laHs modified"
{{ else }}
alias ls="eza"
alias ll="eza -lH"
alias lr="eza -laHs modified"
{{ end }}

alias nls="npm list --depth 0 --silent"
alias ocr="xclip -selection clipboard -t image/png -o | tesseract -l eng - - 2>/dev/null"
alias paste-text="xclip -selection clipboard -o -t text/plain"   # Copy clipboard text to stdout
alias paste-image="xclip -selection clipboard -o -t image/png"   # Copy clipboard image to stdout
alias paste-browser="paste-image >/tmp/clipboard.png && b /tmp/clipboard.png 2>/dev/null" # Paste image to browser.
alias resize-image="mogrify -quality 25 -resize 800"             # Resize and compress images


#
# Shared functions
#

# 1. Search for text in files using Ripgrep
# 2. Interactively narrow down the list using fzf
# 3. Open the file in Vim
# https://github.com/junegunn/fzf/blob/master/ADVANCED.md#ripgrep-integration
function sa() {
    # rg --color=always --line-number --no-heading --smart-case --type=all "$1" "${2:-$SD_DIR}" |
    rg --color=always --line-number --no-heading --smart-case --type=all "${*:-}" |
    fzf --ansi \
        --color "hl:-1:underline,hl+:-1:underline:reverse" \
        --delimiter : \
        --preview 'bat --color=always {1} --highlight-line {2}' \
        --preview-window 'nohidden,up,60%,border-bottom,+{2}+3/3,~3' \
        --bind 'enter:become(code --goto {1}:{2})'
        # --bind 'enter:become(vim {1} +{2})'
}

# Search the $SD_DIR directory for the regexp PATTERN in markdown and text files.
SD_DIR="$DOCUMENTS_DIR"

function sd() {
    if [[ "$1" == "--help" || "$1" == "-h" ]]; then
        cat >&2 <<EOF

Search the $SD_DIR directory for the regexp PATTERN in markdown and text files.

- List top 40 file in ascending order of match count (the file with the most matches is printed last).
- Selected files are opened in VSCode.
- If PATTERN is omitted list all files in $SD_DIR.
- Set the SD_DIR env variable to change the documents directory.

usage: $0 [PATTERN]

EOF
        return
    fi
    local files=
    if [ -z "$1" ]; then
        # List all files.
        files=$(fd --type f . "$SD_DIR" | fzf)
    else
        # List files matching $1 and preview grepped contents.
        local rg_opts=(--ignore-case --word-regexp --sort=none --type=txt --type=markdown)
        files=$(
            rg ${rg_opts[@]} --files-with-matches --count-matches "$1"  "$SD_DIR" \
            | sort -t ':' -k2n \
            | tail -40 \
            | awk -F':' '{print $1}' \
            | tac \
            | fzf --preview "rg ${rg_opts[*]} --context=3 --context-separator=______________________________ --line-number --color=always --colors=match:bg:yellow --colors=match:style:bold '$1' {}" --preview-window=nohidden
        )
    fi
    if [ -z "$files" ]; then
        return 1
    fi
    # Open selected files.
    local files_array=()
    while IFS= read -r line; do
        files_array+=("$line")
    done <<< "$files"
    code ${files_array[@]}
}

# Recoll document search, lists file names that match query.
# Usage: ds query
function ds() {
    if [ "$*" ]; then
        recoll -t -q $*  2>/dev/null \
            | tail -n +3 \
            | head -n 20 \
            | perl -pe 's|^.*\[file:\/\/(.*?)\].*$|\1|'
    else
        echo "missing search query" >&2
        return 1
    fi
}
