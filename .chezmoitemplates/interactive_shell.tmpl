# vim: set filetype=bash:

#
# Shared environment variables.
# Included in .bashrc and .zshrc
#

{{if .chezmoi.hostname | hasPrefix "nuc"}}
# Fix Remmina invisible cursor over SSH issue.
export PROMPT=$'%{\e]12;green\a%}\n%B%F{green}%n@%m %F{yellow}%~%f%b\n$ '
{{else}}
export PROMPT=$'\n%B%F{magenta}%n@%m %F{cyan}%~%f%b\n$ '
{{end}}

# Shared bash and zsh history.
export HISTFILE=~/.shared_history
export HISTSIZE=10000

export FZF_DEFAULT_OPTS="--ansi --multi --bind ctrl-a:select-all,ctrl-d:deselect-all,ctrl-space:toggle+down,ctrl-t:toggle-preview --preview 'bat --color=always --style=plain {}' --preview-window 'wrap,hidden,up,60%,border-bottom'"
export FZF_DEFAULT_COMMAND="fd --type f"

export BAT_THEME="Dracula"

# Default apps.
export EDITOR=nvim

# Secrets
{{ if and .secrets (hasKey .secrets "gemini_api_key") }}
export GEMINI_API_KEY={{ .secrets.gemini_api_key }}
{{ end }}

#
# Shared aliases
#

{{if .chezmoi.hostname | hasPrefix "nuc"}}
{{/* Workarounds for using system commands installed by Home Manager */}}
alias crontab="/usr/bin/crontab"                # Use system crontab instead of busybox crontab
alias sudo="sudo "                              # To allow alias expansion before invoking sudo
alias iotop="$HOME/.nix-profile/bin/iotop"      # So `sudo iotop` works
alias nethogs="$HOME/.nix-profile/bin/nethogs"  # So `sudo nethogs` works
{{end}}

{{/*
Shared bash and zsh configuration settings for interactive shells.
*/}}
# Shared bash and zsh aliases
alias ,="cd -"
alias b="brave"
alias btc='echo $(date +'%H:%M'): $(ccp BTC)'

alias cat="bat --style=plain" 
alias less="bat --style=plain"
alias l="bat --style=plain"

{{if eq .chezmoi.arch "arm64"}}
alias cryptor="cryptor.arm64"
{{end}}
alias chezmoi-add-modified="chezmoi add ~/.config/nvim/lazy-lock.json && chezmoi add ~/.config/nvim/vim/init.vim && chezmoi re-add ~/.config/rustdesk"
alias clipboard="xclip -selection clipboard"    # Copy stdout to clipboard
alias cryptor-summary="cryptor valuate -currency nzd -confdir ~/bin/.cryptor -aggregate-only"
alias cryptor-plot="cryptor history -confdir ~/bin/.cryptor -portfolio aggregate | plot-history.sh"
alias dmesg="sudo dmesg --human --color=always"
alias diff="diff --color=always -u"
alias drake="deno run -A Drakefile.ts"
alias rg="rg --colors path:style:bold  --colors path:fg:yellow"
alias g="rg --max-depth 1 -z"
alias gd="git diff --color"
alias gg="git grep -P"
# alias gl="git log --pretty=format:'%h%x09%ad%x09%Cgreen%d%Creset %s' --date=relative --color=always | fzf --preview 'git show --name-only {1}'"
alias gl='git-graph --color=always | FZF_DEFAULT_OPTS="${FZF_DEFAULT_OPTS/,hidden/}" fzf --no-sort --preview='\''hash=$(echo {} | grep -o "[a-f0-9]\{7,\}" | head -n1); [[ -n $hash ]] && git show --color $hash'\'''
alias gls="git ls-files"
alias grep="grep --color=auto"
alias gst="git status --short 2>/dev/null"
alias gt="tmux capture-pane -p -S - | rg --color=always"  # grep tmux current pane
alias gw="./gradlew --console plain"
{{if eq .chezmoi.osRelease.id "manjaro"}}
alias hx="helix"
{{end}}
alias h="history"

alias ls="eza"
alias ll="eza -lHg"
alias lr="eza -laHgs modified"

alias nls="npm list --depth 0 --silent"
alias ocr="xclip -selection clipboard -t image/png -o | tesseract -l eng - - 2>/dev/null"

{{/* distro-independent package mmmanagement aliases */}}
{{if eq .chezmoi.osRelease.id "manjaro"}}
alias pkgs="pacman -Sl --color=always | fzf --preview 'pacman -Si {2}'"
alias pkg-install="sudo pacman -S"
alias pkg-remove="sudo pacman -Rsun"
alias pkgs-upgrade="sudo pacman -Syu"
{{else if or (eq .chezmoi.osRelease.id "ubuntu")   (eq .chezmoi.osRelease.id "debian")}}
alias pkgs="apt-cache search . 2>/dev/null | fzf --preview 'apt-cache depends {1}'"
{{/* TODO: Add pkgs aliases for Debian/Ubuntu. */}}
{{else if eq .chezmoi.osRelease.id "nixos"}}
alias pkgs-upgrade="sudo nix-collect-garbage --delete-old && sudo nix-store --optimise && sudo nix-channel --update && sudo nix-channel --update unstable && mknixos boot --upgrade"
{{end}}
{{/* Update user Home Manager packages */}}
alias home-manager-upgrade="nix-collect-garbage --delete-old && nix-store --optimise && nix-channel --update && home-manager switch"

alias mknixos="sudo nixos-rebuild -I nixos-config=$HOME/nixos-configurations/$HOST-configuration.nix"
alias paste-text="xclip -selection clipboard -o -t text/plain"   # Copy clipboard text to stdout
alias paste-image="xclip -selection clipboard -o -t image/png"   # Copy clipboard image to stdout
alias paste-browser="paste-image >/tmp/clipboard.png && b /tmp/clipboard.png 2>/dev/null" # Paste image to browser
alias resize-image="mogrify -quality 25 -resize 800"             # Resize and compress images


#
# Shared functions
#

open_file_cmd="$HOME/bin/file-open.sh"
ds_manpage="Usage: ds QUERY

Full text document search for files whose contents that match the Recoll QUERY.
Recursively grep the files in PATH for words matching REGEXP.

- List top 40 files in ascending match order (the file with the
  best match is listed last).
- Interactively narrow down the list using fzf.
- Ctrl-o opens the selected file in the appopriate application.
- Enter yanks the selected file to the clipboard, prints the file path, and exits."
function ds() {
    if [ "$*" ]; then
        recoll -t -q $*  2>/dev/null \
        | tail -n +3 \
        | head -n 40 \
        | perl -pe "s|^.*\[file:\/\/(.*?)\].*$|\1|" \
        | FZF_DEFAULT_OPTS="${FZF_DEFAULT_OPTS/,hidden/}" \
        fzf --preview "bat --color=always {}" \
        --bind "enter:become(echo {} | tee >(head -c -1 | xclip -selection clipboard))" \
        --bind "ctrl-o:become($open_file_cmd {1})"
    else
        echo $ds_manpage >&2
        return 1
    fi
}
