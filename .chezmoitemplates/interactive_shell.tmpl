#
# Shared environment variables.
#

{{if .chezmoi.hostname | hasPrefix "nuc"}}
# Fix Remmina invisible cursor over SSH issue.
export PROMPT=$'%{\e]12;green\a%}\n%B%F{green}%n@%m %F{yellow}%~%f%b\n$ '
{{else}}
export PROMPT=$'\n%B%F{magenta}%n@%m %F{cyan}%~%f%b\n$ '
{{end}}

# Shared bash and zsh history.
export HISTFILE=~/.shared_history
export HISTSIZE=10000

export FZF_DEFAULT_OPTS="--ansi --multi --bind ctrl-a:select-all,ctrl-d:deselect-all,ctrl-space:toggle+down,ctrl-t:toggle-preview --preview 'bat --color=always --style=plain {}' --preview-window wrap:hidden"
export FZF_DEFAULT_COMMAND="fd --type f"
export FZF_COMPLETION_TRIGGER=".."

# Default apps.
export EDITOR=vi


#
# Shared aliases
#

{{/*
Shared bash and zsh configuration settings for interactive shells.
*/}}
# Shared bash and zsh aliases
alias ,="cd -"
alias b="brave"

{{/* Ubuntu renamed `bat` to `batcat`*/}}
{{if eq .chezmoi.osRelease.id "ubuntu"}}
alias cat="batcat --style=plain" 
alias less="batcat --style=plain"
alias l="batcat --style=plain"
{{else}}
alias cat="bat --style=plain" 
alias less="bat --style=plain"
alias l="bat --style=plain"
{{end}}

{{if eq .chezmoi.arch "arm64"}}
alias cryptor="cryptor.arm64"
{{end}}
alias clipboard="xclip -selection clipboard"    # Copy stdout to clipboard
alias dmesg="sudo dmesg --human --color=always"
alias diff="diff --color=always -u"
alias drake="deno run -A Drakefile.ts"
alias rg="rg --colors path:style:bold  --colors path:fg:yellow"
alias g="rg --max-depth 1 -z"
alias gd="git diff --color"
alias gg="git grep -P"
alias gl="git log --pretty=format:'%h%x09%ad%x09%Cgreen%d%Creset %s' --date=relative --color=always | fzf --preview 'git show --name-only {1}' --preview-window=hidden"
alias gls="git ls-files"
alias grep="grep --color=auto"
alias gst="git status --short 2>/dev/null"
alias gw="./gradlew --console plain"
alias h=history

# lsflags="--color --group-directories-first"
# alias ls="ls ${lsflags}"
# alias la="ls ${lsflags} -lA"
# alias ll="ls ${lsflags} -l"
# alias lr="ls ${lsflags} -Altr --time-style='+%d-%m-%Y %H:%M:%S'" # Long listing in reverse chronological order

{{/* 23-Mar-2024: Ubuntu uses the older exa */}}
{{if or (eq .chezmoi.osRelease.id "ubuntu")  (.chezmoi.hostname | hasPrefix "nuc")}}
alias eza="exa"
{{end}}
alias ls="eza"
alias ll="eza -lHg"
alias lr="eza -laHgs modified"

alias nls="npm list --depth 0 --silent"
alias ocr="xclip -selection clipboard -t image/png -o | tesseract -l eng - - 2>/dev/null"

{{/* distro-independent package mmmanagement aliases */}}
{{if eq .chezmoi.osRelease.id "manjaro"}}
alias pkgs="pacman -Ssq | fzf --preview 'pacman -Si "{1}"' --preview-window=nohidden"
alias pkg-install="sudo pacman -S"
alias pkg-remove="sudo pacman -Rsun"
alias pkgs-upgrade="sudo pacman -Syu"
{{else if or (eq .chezmoi.osRelease.id "ubuntu")   (eq .chezmoi.osRelease.id "debian")}}
alias pkgs="apt-cache search . 2>/dev/null | fzf --preview 'apt-cache depends {1}' --preview-window=nohidden"
{{/* TODO: Add pkgs aliases for Debian/Ubuntu. */}}
{{else if eq .chezmoi.osRelease.id "nixos"}}
{{/* TODO: Add pkgs aliases for NixOS. */}}
{{end}}

alias mknixos="sudo nixos-rebuild -I nixos-config=$HOME/nixos-configurations/$HOST-configuration.nix"
alias paste-text="xclip -selection clipboard -o -t text/plain"   # Copy clipboard text to stdout
alias paste-image="xclip -selection clipboard -o -t image/png"   # Copy clipboard image to stdout
alias paste-browser="paste-image >/tmp/clipboard.png && b /tmp/clipboard.png 2>/dev/null" # Paste image to browser.
alias resize-image="mogrify -quality 25 -resize 800"             # Resize and compress images


#
# Shared functions
#

ff_manpage="Usage: ff PATH REGEXP

Recursively find file names that match regular expression REGEXP in PATHS.

- If REGEXP is "" then every file will be matched.
- Interactively narrow down the list using fzf.
- Open the selected file in VSCode."

function ff() {
    if [ "$#" -ne 2 ]; then
        echo $ff_manpage >&2
        return 1
    fi
    fd --type f --hidden --color always "$2" "$1" |
    fzf --preview 'bat --color=always {} --theme Dracula' \
        --preview-window 'hidden,up,60%,border-bottom,+{2}+3/3,~3' \
        --no-multi \
        --bind 'enter:become(code --goto {})'
        # --bind 'enter:become(vim {})'
}

ft_manpage="Usage: ft PATH REGEXP

Recursively grep the files in PATH for text matching REGEXP.

- If REGEXP is "" then every file will be matched.
- Interactively narrow down the list using fzf.
- Open the selected file in VSCode."

function ft() {
    if [ "$#" -ne 2 ]; then
        echo $ft_manpage >&2
        return 1
    fi
    # The /dev/null is included in rg paths so rg always sees two or more files, this ensures it always includes the file name in search results, which is necessary for the fzf {1} parameter.  https://github.com/junegunn/fzf/blob/master/ADVANCED.md#ripgrep-integration"
    rg --color=always --line-number --no-heading --smart-case --type=all --type-not=pdf "$2" "$1" /dev/null |
    fzf --color "hl:-1:underline,hl+:-1:underline:reverse" \
        --delimiter : \
        --preview 'bat --color=always {1} --highlight-line {2} --theme Dracula' \
        --preview-window 'hidden,up,60%,border-bottom,+{2}+3/3,~3' \
        --no-multi \
        --bind 'enter:become(code --goto {1}:{2})'
        # --bind 'enter:become(vim {1} +{2})'
}

sd_manpage="Usage: sd PATH REGEXP

Recursively grep the files in PATH for words matching REGEXP.

- List top 40 files in ascending order of match word count (the file with the
  most matches is listed last).
- If REGEXP is "" then every file will be matched.
- Interactively narrow down the list using fzf.
- Open the selected file in VSCode."
function sd() {
    if [ "$#" -ne 2 ]; then
        echo $sd_manpage >&2
        return 1
    fi
    local rg_opts=(--ignore-case --word-regexp --sort=none --type=all --type-not=pdf)
    rg ${rg_opts[@]} --files-with-matches --count-matches "$2"  "$1" \
    | sort -t ':' -k2n \
    | tail -40 \
    | awk -F':' '{print $1}' \
    | tac \
    | fzf --preview "rg ${rg_opts[*]} --context=3 \
          --context-separator=______________________________ \
          --line-number \
          --color=always --colors=match:bg:yellow --colors=match:style:bold '$2' {}" \
          --preview-window 'hidden,up,60%,border-bottom' \
          --no-multi \
          --bind 'enter:become(code --goto {})'
}

ds_manpage="Usage: sd QUERY

Full text document search for files whose contents that match the Recoll QUERY.
Recursively grep the files in PATH for words matching REGEXP.

- List top 40 files in ascending match order (the file with the
  best match is listed last).
- Interactively narrow down the list using fzf.
- Open the selected file in VSCode."
# Recoll document search, lists file names that match query.
# Usage: ds query
function ds() {
    if [ "$*" ]; then
        recoll -t -q $*  2>/dev/null \
        | tail -n +3 \
        | head -n 40 \
        | perl -pe 's|^.*\[file:\/\/(.*?)\].*$|\1|' \
        | fzf --preview 'bat --color=always {} --theme Dracula' \
            --preview-window 'hidden,up,60%,border-bottom,+{2}+3/3,~3' \
            --no-multi \
            --bind 'enter:become(code --goto {})'
            # --bind 'enter:become(vim {})'
    else
        echo $ds_manpage >&2
        return 1
    fi
}
