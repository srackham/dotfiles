#!/usr/bin/env bash
#
# ode
#
# ode (open dev environment) opens multiple tmux windows, each window is opened onto a project directory
# from the list of directories in `$HOME/.ode` with the `tide` script.
#

# Define the path to the configuration file
CONFIG_FILE="$HOME/.ode"

# Check if we're in a tmux session
if [ -z "$TMUX" ]; then
    echo "This command must be run inside a tmux session, run:"
    echo ""
    echo "    tmux new-session ode"
    exit 1
fi

# Check if the configuration file exists and is readable
if [[ ! -f "$CONFIG_FILE" ]]; then
    echo "Error: Configuration file not found: $CONFIG_FILE" >&2
    exit 1
fi

if [[ ! -r "$CONFIG_FILE" ]]; then
    echo "Error: Configuration file not readable: $CONFIG_FILE" >&2
    exit 1
fi

# Read the file line by line
# IFS= prevents trimming leading/trailing whitespace by 'read'
# -r prevents backslash interpretation
# || [[ -n "$line" ]] handles the case where the last line doesn't end with a newline
while IFS= read -r line || [[ -n "$line" ]]; do

    # Skip empty lines
    if [[ -z "$line" ]]; then
        continue
    fi

    # Skip comment lines (lines starting with #, potentially after some whitespace)
    # Use parameter expansion to remove leading whitespace for the check
    shopt -s extglob # Enable extended globbing for trim
    trimmed_line="${line##*( )}" # Remove leading spaces (bash 4+)
    # Or use: trimmed_line=$(echo "$line" | sed 's/^[[:space:]]*//') # More portable
    shopt -u extglob # Disable extended globbing

    if [[ "$trimmed_line" == \#* ]]; then
        continue
    fi

    # At this point, 'line' contains a potential directory path
    # Assign it to a variable for clarity (optional)
    dir_path="$line"

    # Check if the path exists and is a directory
    # Use quotes around "$dir_path" to handle paths with spaces
    if [[ -d "$dir_path" ]]; then
        # Open project in new tmux window
        tide "$dir_path"
    else
       echo "Warning: Directory not found or not accessible: $dir_path" >&2
    fi

done < "$CONFIG_FILE"

# Move to the doc window
tmux select-window -t:2
# Resize width of docs editor pane
tmux resize-pane -x 125 -t:2.1
# Close this unused window last
tmux kill-window -t:1

# Exit successfully
exit 0
