#!/usr/bin/env bash

set -euo pipefail

print_help() {
    cat <<'EOF'
NAME
    tde - open project workspaces

SYNOPSIS
    tde -h | --help | [PROJECT_DIR]...

DESCRIPTION
    Opens project directories, one per tmux window:

    - PROJECT_DIR arguments are a list of project directories.
    - If no PROJECT_DIR arguments are given then project directories are read, one per line, from the $HOME/.tde file.
    - Blank lines and lines beginning with a '#' character in the .tde file are skipped.
    - If one or more project directories do not exist print an error message and exit.
    - If there are no PROJECT_DIR arguments then check if a session named 'tde' exists, if yes attach it and exit.
    - If there are PROJECT_DIR arguments then create a new tmux session with the automatically assigned session name,
      if not create a tmux session with the session name 'tde'.
    - For each project directory:

        1. Set the working directory to the project directory.
        2. Create a tmux window named with the project directory's base name minus its file name extension
           with remaining period characters replaced with hyphens.
        3. Split the window into two vertical panes.
        4. Execute the 'nvim' command in the left-hand pane.
        5. Select the left-hand pane.

    - Select the first session window and attach the session.
EOF
}

# Function to generate window name from directory
window_name() {
    local dir="$1"
    local basename win_name
    basename="$(basename "$dir")"
    win_name="${basename%%.*}"
    win_name="${win_name//./-}"
    echo "$win_name"
}

# Handle -h and --help
if [[ $# -gt 0 ]]; then
    case "$1" in
        -h|--help)
            print_help
            exit 0
            ;;
    esac
fi

PROJECT_DIRS=()
if [[ $# -gt 0 ]]; then
    # PROJECT_DIR arguments provided
    PROJECT_DIRS=("$@")
else
    # Read from $HOME/.tde
    while IFS= read -r line; do
        [[ -z "$line" || "$line" =~ ^# ]] && continue
        PROJECT_DIRS+=("$line")
    done < "$HOME/.tde"
fi

# Check for missing directories
MISSING=()
for DIR in "${PROJECT_DIRS[@]}"; do
    if [[ ! -d "$DIR" ]]; then
        MISSING+=("$DIR")
    fi
done

if [[ ${#MISSING[@]} -gt 0 ]]; then
    echo "Error: The following project directories do not exist:" >&2
    for DIR in "${MISSING[@]}"; do
        echo "  $DIR" >&2
    done
    exit 1
fi

if [[ ${#PROJECT_DIRS[@]} -eq 0 ]]; then
    echo "Error: No project directories specified or found in \$HOME/.tde" >&2
    exit 1
fi

if [[ $# -eq 0 ]]; then
    # No PROJECT_DIR arguments: check for 'tde' session, attach if exists, else create 'tde' session
    SESSION="tde"
    if tmux has-session -t "$SESSION" 2>/dev/null; then
        tmux attach-session -t "$SESSION"
        exit 0
    fi
else
    # PROJECT_DIR arguments provided: create session with auto-assigned name
    SESSION=""
fi

# Create new tmux session
FIRST_DIR="${PROJECT_DIRS[0]}"
FIRST_WIN_NAME="$(window_name "$FIRST_DIR")"
if [[ -n "$SESSION" ]]; then
    tmux new-session -d -s "$SESSION" -c "$FIRST_DIR" -n "$FIRST_WIN_NAME"
    SESSION_ID="$SESSION"
else
    SESSION_ID=$(tmux new-session -d -P -F '#S' -c "$FIRST_DIR" -n "$FIRST_WIN_NAME")
fi

tmux set-option -g base-index 1
tmux set-window-option -g pane-base-index 1

for idx in "${!PROJECT_DIRS[@]}"; do
    DIR="${PROJECT_DIRS[$idx]}"
    WIN_NAME="$(window_name "$DIR")"

    if [[ $idx -eq 0 ]]; then
        tmux rename-window -t "$SESSION_ID:1" "$WIN_NAME"
    else
        tmux new-window -t "$SESSION_ID:" -c "$DIR" -n "$WIN_NAME"
    fi

    WIN_TARGET="$SESSION_ID:$WIN_NAME"

    # Split window into two vertical panes (left/right)
    tmux split-window -h -t "$WIN_TARGET" -c "$DIR"

    # Execute nvim in the left-hand pane, then select it
    # Pane numbers may depend on tmux config; by default, after split-window -h:
    # - left pane is .1, right pane is .2 (pane-base-index is set to 1 in my tmux.conf)
    tmux send-keys -t "$WIN_TARGET".1 "nvim" C-m
    tmux select-pane -t "$WIN_TARGET".1
done

tmux select-window -t "$SESSION_ID:1"
tmux attach-session -t "$SESSION_ID"

