# vim: set filetype=bash:

# Sourced by bash (from ~/.bash_profile), zsh (from ~/.zprofile), and the GDM.
echo "*** sourcing ~/.profile ***"

{{if eq .chezmoi.osRelease.id "manjaro"}}
if [ -f "/etc/profile.d/locale.sh" ]; then
    unset LANG
    source /etc/profile.d/locale.sh
fi
{{end}}

export DOCUMENTS_DIR="$HOME/doc"
export PROJECTS_DIR="$HOME/projects"

# Used by bash and zsh for easier path navigation.
export CDPATH=$PROJECTS_DIR:$DOCUMENTS_DIR/business:$DOCUMENTS_DIR/domestic

# time command format
export TIMEFMT=$'\nelapsed time: %*E\nmax memory:   %MKB\ncpu:          %P'

# Don't use Git repo in $HOME unless it's the current working directory.
export GIT_CEILING_DIRECTORIES="$HOME"

# SJR: 10-Oct-2023: GnuCash data and config directories.
export GNC_DATA_HOME="$DOCUMENTS_DIR/business/accounting/gnucash5/.local/share/gnucash"
export GNC_CONFIG_HOME="$DOCUMENTS_DIR/business/accounting/gnucash5/.config/gnucash"

export RECOLL_CONFDIR="$HOME/.config/recoll"

#
# Build the PATH env variable:
#

# User's binaries
export PATH="$HOME/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="./node_modules/.bin:$PATH"
# Source Nix Package Manager if it's installed.
if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then
  . $HOME/.nix-profile/etc/profile.d/nix.sh
fi

# Use Brave instead of Chrome when doing Flutter Web development.
if which brave >/dev/null; then
    export CHROME_EXECUTABLE=$(which brave)
fi

# Deno runtime
if [ -d "$HOME/.deno/bin" ]; then
    export PATH=$PATH:$HOME/.deno/bin
fi

# Go language (add GOROOT and GOPATH to PATH)
if [ -d "$HOME/go" ]; then
    export PATH=$PATH:$HOME/go/bin
fi

# Rust language
if [ -f $HOME/.cargo/env ]; then
    source $HOME/.cargo/env
fi

##############
# Legacy paths
##############

# if [ -d "$HOME/local/bin" ]; then
#     export PATH="$HOME/local/bin:$PATH"
# fi

# # Virgil language
# if [ -d "$HOME/local/bin/virgil" ]; then
#     export PATH="$HOME/local/bin/virgil/bin:$HOME/local/bin/virgil/bin/dev:$PATH"
# fi

# # wassmtime Wasm runtime
# if [ -d "$HOME/.wasmtime" ]; then
#     export WASMTIME_HOME="$HOME/.wasmtime"
#     export PATH="$WASMTIME_HOME/bin:$PATH"
# fi

# # wasmer Wasm runtime
# if [ -d "$HOME/.wasmer" ]; then
#     export WASMER_HOME="$HOME/.wasmer"
#     export PATH="$WASMER_HOME/bin:$PATH"
# fi

# # >>> coursier install directory >>>
# export PATH="$PATH:/home/srackham/.local/share/coursier/bin"
# # <<< coursier install directory <<<


#
# Run custom login commands
#

{{if eq .chezmoi.osRelease.id "nixos"}}
# KLUDGE: After a NixOS restart `<Super>Right` executes the GNOME `move-to-monitor-right` desktop action even though it's bound to `<Super><Shift>Right` (its default binding). See `$HOME/doc/apps/gnome-notes.md`.
if [ "$XDG_CURRENT_DESKTOP" = "GNOME" ]; then
gsettings set org.gnome.desktop.wm.keybindings move-to-monitor-right "[]" &&  gsettings set org.gnome.desktop.wm.keybindings move-to-monitor-right "['disabled']"
fi
{{end}}
