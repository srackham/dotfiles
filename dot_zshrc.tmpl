echo "*** sourcing ~/.zshrc ***"

{{template "interactive_shell.tmpl" .}}

# zsh specific history settings.
export SAVEHIST=$HISTSIZE
setopt append_history           # Immediately append history instead of overwriting
setopt inc_append_history       # Write to history file immediately, not when shell quits
setopt no_extended_history
setopt no_share_history         # So zsh doesn't use extended history format.
setopt hist_ignore_all_dups     # If a new command is a duplicate, remove the older one

# Tab completion
fpath=(~/.zsh/completion $fpath)
autoload -Uz compinit && compinit
zstyle ':completion:*' rehash true  # automatically find new executables in the $PATH
# Fix slow git tab completion, see https://stackoverflow.com/a/9810485/1136455
__git_files () {
    _wanted files expl 'local files' _files
}

case $TERM in
screen*)
    export PROMPT=$'\n%B%F{red}screen %F{green}%n@%m %F{yellow}%~%f%b\n$ '
    ;;
*)
    # export PROMPT=$'\n%B%F{cyan}%n@%m %F{yellow}%~%f%b\n$ '
    export PROMPT=$'\n%B%F{magenta}%n@%m %F{cyan}%~%f%b\n$ '
    ;;
esac
bindkey -v                          # vi command-line editing
setopt interactive_comments         # allow # comments in shell; good for copy/paste
export BLOCK_SIZE="'1"              # Add commas to file sizes
typeset -U path                     # keep duplicates out of the path
setopt extended_glob                # extended globbing. Allows using regular expressions with *
setopt autocd                       # if only directory path is entered, cd there.


#
# Install zsh community projects (https://github.com/zsh-users)
#

# If not already installed then install a zsh-users project and then load it.
# $1 is the zsh-users project Github repository URL.
function load-zsh-users() {
    local url="$1"
    local dir="$HOME/.zsh/$(basename $1)"
    local file="$dir/$(basename $1).zsh"
    if [ ! -d $dir ]; then
        git clone $url $dir
    fi
    source $file
}
load-zsh-users https://github.com/zsh-users/zsh-autosuggestions
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=249" # See https://coderwall.com/p/pb1uzq/z-shell-colors
# Mapping Ctrl+Enter to autosuggest-execute is problematic (https://stackoverflow.com/a/45714460/1136455)
bindkey '^@' autosuggest-execute    # Ctrl+Space executes current suggestion
load-zsh-users https://github.com/zsh-users/zsh-syntax-highlighting
load-zsh-users https://github.com/zsh-users/zsh-history-substring-search
{{if eq .chezmoi.osRelease.id "manjaro"}}
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
{{else}}
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
{{end}}
export HISTORY_SUBSTRING_SEARCH_ENSURE_UNIQUE=true


{{if or (eq .chezmoi.osRelease.id "manjaro") (eq .chezmoi.osRelease.id "ubuntu")}}
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/srackham/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/srackham/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/srackham/miniconda3/etc/profile.d/conda.sh"
    else
        if [[ ":$PATH:" != *":/home/srackham/miniconda3/bin:"* ]]; then
            export PATH="/home/srackham/miniconda3/bin:$PATH"
        fi
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
{{end}}

{{/*
TODO: Use fzf `--bash`, `--zsh`, options to install key bindings and completions (only available in fzf 0.48.0 or later -- https://github.com/junegunn/fzf#using-linux-package-managers).
*/}}
{{if eq .chezmoi.osRelease.id "nixos"}}
# Set up fzf key bindings and fuzzy completion.
eval "$(fzf --zsh)"
{{else if eq .chezmoi.osRelease.id "manjaro"}}
# Configure fzf (https://wiki.archlinux.org/title/fzf)
if [ -d /usr/share/fzf ]; then
    source /usr/share/fzf/key-bindings.zsh
    source /usr/share/fzf/completion.zsh
fi
{{else if or (eq .chezmoi.osRelease.id "ubuntu")  (.chezmoi.hostname | hasPrefix "nuc")}}
# Configure fzf (https://github.com/junegunn/fzf/issues/3395)
if [ -d /usr/share/doc/fzf/examples ]; then
    source /usr/share/doc/fzf/examples/key-bindings.zsh
    source /usr/share/doc/fzf/examples/completion.zsh
fi
{{end}}